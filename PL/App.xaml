<Application x:Class="PL.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:PL"
             StartupUri="MainWindow.xaml">
    <Application.Resources>


        




        <LinearGradientBrush x:Key="colorInDataGrid">
            <GradientStop Color="Coral"
                    Offset="0" />
            <GradientStop Color="Pink"
                    Offset="0.15" />
            <GradientStop Color="MistyRose"
                    Offset="0.34" />
            <GradientStop Color="White"
                    Offset="0.5" />
            <GradientStop Color="LightPink"
                    Offset="0.70" />
            <GradientStop Color="MistyRose"
                    Offset="0.90" />
            <GradientStop Color="LightCoral"
                    Offset="1" />

        </LinearGradientBrush>

        <Style x:Key="fontInDataGridStyle" >
            <Setter Property="TextElement.FontFamily" Value="Cascadia Mono SemiBold"/>
            <Setter Property="TextElement.FontStyle" Value="Italic"/>
            <Setter Property="TextBlock.Foreground" Value="{StaticResource colorInDataGrid }"/>
        </Style>
        
        <Style TargetType="Label" >
            <Setter Property="TextElement.FontFamily" Value="Cascadia Mono SemiBold"/>
            <Setter Property="TextElement.FontStyle" Value="Italic"/>
            <Setter Property="TextBlock.Foreground" Value="Black"/>
        </Style>
        <Style  x:Key="textOfItem" TargetType="TextBlock" >
            <Setter Property="TextElement.FontFamily" Value="Cascadia Mono SemiBold"/>
            <Setter Property="TextElement.FontStyle" Value="Italic"/>

            <Setter Property="TextBlock.Foreground" Value="Black"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="FontWeight" Value="ExtraBold" />
                    <Setter Property="TextDecorations" Value="Underline" />
                </Trigger>
            </Style.Triggers>

        </Style>

        <Style  x:Key="ButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="{StaticResource colorInDataGrid}" />
            <Setter Property="Width" Value="100" />
            <Setter Property="FontStyle" Value="Italic"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="FontSize" Value="20" />
            <Setter Property="FontFamily" Value="Algerian"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="10"
                            Background="{StaticResource colorInDataGrid}"
                            BorderThickness="1">
                            <ContentPresenter
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Margin="{TemplateBinding Padding}" ></ContentPresenter>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="RenderTransform">
                <Setter.Value>
                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="RenderTransform">
                        <Setter.Value>
                            <ScaleTransform ScaleX="1.1" ScaleY="1.1"/>
                        </Setter.Value>
                    </Setter>

                </Trigger>

            </Style.Triggers>
        </Style>
        <Style  TargetType="Window" >
            <Setter Property="Background" Value="LightCyan">
            </Setter>
        </Style>
        <Style x:Key="buttonDelete" TargetType="Button">
            <Setter Property="Width" Value="50" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="#ECF0F1" BorderThickness="0" Padding="5">
                            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style x:Key="RoundButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border
          Background="{TemplateBinding Background}"
          BorderBrush="DarkBlue"
          BorderThickness="2"
          CornerRadius="50">
                            <Border.Effect>
                                <DropShadowEffect ShadowDepth="1"/>
                            </Border.Effect>

                            <ContentPresenter
            HorizontalAlignment="Center"
            VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Setter Property="RenderTransform">
                <Setter.Value>
                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="RenderTransform">
                        <Setter.Value>
                            <ScaleTransform ScaleX="1.1" ScaleY="1.1"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>


        <Style x:Key="RoundedEdes" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="10"
                            Background="{StaticResource colorInDataGrid}"
                            BorderThickness="1">
                            <ContentPresenter
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Margin="{TemplateBinding Padding}" ></ContentPresenter>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Width" Value="100" />
            <Setter Property="FontStyle" Value="Italic"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="FontSize" Value="20"/>
        </Style>


        <Style x:Key="blurBackground" TargetType="Window">
            <Setter Property="Background">
                <Setter.Value>
                    <VisualBrush>
                        <VisualBrush.Visual>
                            <Image>
                                <Image.Effect>
                                    <BlurEffect Radius="20"/>
                                </Image.Effect>
                            </Image>
                        </VisualBrush.Visual>
                    </VisualBrush>
                </Setter.Value>
            </Setter>
        </Style>



        <local:BooleanToVisibilityConverter x:Key="booleanToVisibilityConverter"/>
        <local:StringToBitmap x:Key="imageConverter"/>
        <local:AmountToComboBox x:Key="amountTOcombo"/>
        <local:DoubleToVisibilityConverter x:Key="doubletoVisible"/>
        <local:DoubleToHiddenConverter x:Key="doubletoHidden"/>
        <local:NoBooleanToVisibilityConverter x:Key="notBoolToVis"/>
        <local:HiddenTOVisible x:Key="Hiddentovisible"/>
        <local:StringToBitmapFromSource x:Key="stringToBitmapWithSource"/>
        <local:StatusToColor x:Key="statusToBackColor"/>


        <local:StatusToInt x:Key="statusToProgressValue"/>


        <!--<local:ConvLogInToVisible x:Key="ConverLogIn"/>-->
        <!--<local:EmptyCollectionToHiddenConverter x:Key="emptyToHidden"/>-->

    </Application.Resources>
</Application>
